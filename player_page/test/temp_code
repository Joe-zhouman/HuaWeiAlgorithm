for(Machine &machine:machines) {
            int type = machine.type;
            if (machine.is_core) {
                for (Position &position: CorePosition[type]) {
                    position.cost = 0;
                    position.cost += machine.cost[region_energy_types[position.region]] +
                                     manu_time[type] * (K + windows[position.window].cost_coeff);
                    if (machine.positions.empty()) {
                        machine.positions.emplace_back(position);
                    } else {
                        machine.positions.emplace(
                                std::lower_bound(machine.positions.begin(), machine.positions.end(), position),
                                position);
                    }
                }
            } else {
                for (Position &position: CorePosition[type]) {
                    position.cost = 0;
                    position.cost += machine.cost[region_energy_types[position.region]];
                    if (machine.positions.empty()) {
                        machine.positions.emplace_back(position);
                    } else {
                        machine.positions.emplace(
                                std::lower_bound(machine.positions.begin(), machine.positions.end(), position),
                                position);
                    }
                }
            }
        }